

set cut_paste_input [stack 0]
version 10.5 v6
push $cut_paste_input
Group {
 name ps_highPass
 tile_color 0x421010ff
 selected true
 xpos 1442
 ypos -4313
 addUserKnob {20 User l template}
 addUserKnob {41 size T Blur4.size}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "Template v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 61
 }
 Clamp {
  name Clamp2
  xpos 447
  ypos 243
 }
 Colorspace {
  colorspace_out sRGB
  name Colorspace2
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 447
  ypos 281
 }
set N1bf82e00 [stack 0]
 Blur {
  channels rgba
  size 20.6
  name Blur4
  label "\[value size] px"
  xpos 355
  ypos 340
 }
push $N1bf82e00
 Merge2 {
  inputs 2
  operation from
  bbox B
  name Merge11
  xpos 447
  ypos 385
 }
 Grade {
  add 0.5
  name Grade2
  xpos 447
  ypos 411
 }
 Colorspace {
  colorspace_in sRGB
  name Colorspace1
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 447
  ypos 437
 }
set N1c18b8b0 [stack 0]
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
push $N1c18b8b0
 Viewer {
  frame_range 1001-1416
  viewerProcess "Rodeo look (Rec709)"
  name Viewer1
  selected true
  xpos 637
  ypos 302
 }
end_group
push $cut_paste_input
Group {
 name blurColor
 tile_color 0x421010ff
 selected true
 xpos 1385
 ypos -4220
 addUserKnob {20 User l blurColor}
 addUserKnob {41 size T Blur1.size}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "Blur Color v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 61
 }
 Colorspace {
  colorspace_out AlexaV3LogC
  name Colorspace1
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 447
  ypos 171
 }
 Colorspace {
  colorspace_out CIE-LCH
  name Colorspace3
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 441
  ypos 243
 }
set Nfc93820 [stack 0]
push $Nfc93820
 Blur {
  channels rgba
  name Blur1
  label "\[value size] px"
  xpos 335
  ypos 301
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy1
  xpos 441
  ypos 339
 }
 Colorspace {
  colorspace_in CIE-LCH
  name Colorspace4
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 447
  ypos 385
 }
 Colorspace {
  colorspace_in AlexaV3LogC
  name Colorspace2
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 447
  ypos 472
 }
set N17b32900 [stack 0]
 Viewer {
  frame_range 881-1439
  gain 1.14
  viewerProcess "Rodeo look (Rec709)"
  input_process false
  name Viewer1
  xpos 631
  ypos 291
 }
push $N17b32900
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
end_group
push $cut_paste_input
push 0
Group {
 inputs 2
 name commonKey1
 tile_color 0x421010ff
 selected true
 xpos 1437
 ypos -4164
 addUserKnob {20 User l commonKey}
 addUserKnob {41 threshold T MergeExpression1.threshold}
 addUserKnob {41 alphaOnly T MergeExpression1.alphaOnly}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "CommonKey v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name A
  xpos 625
  ypos 82
  number 1
 }
 Input {
  inputs 0
  name B
  xpos 447
  ypos 76
 }
 MergeExpression {
  inputs 2
  temp_name0 red
  temp_expr0 "abs(Ar-Br) >= threshold ? 1 : 0"
  temp_name1 green
  temp_expr1 "abs(Ag-Bg) >= threshold ? 1 : 0"
  temp_name2 blue
  temp_expr2 "abs(Ab-Bb) >= threshold ? 1 : 0"
  temp_name3 mask
  temp_expr3 max(red,green,blue)
  expr0 "alphaOnly ? Br : mask == 1 ? Br : Ar"
  expr1 "alphaOnly ? Bg : mask == 1 ? Bg : Ag"
  expr2 "alphaOnly ? Bb : mask == 1 ? Bb : Ab"
  expr3 mask
  name MergeExpression1
  selected true
  xpos 447
  ypos 359
  addUserKnob {20 User}
  addUserKnob {6 alphaOnly +STARTLINE}
  addUserKnob {7 threshold R 1e-05 0.1}
  threshold 0.0088
 }
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
end_group
push $cut_paste_input
Group {
 name deadPixelFinder
 tile_color 0x421010ff
 selected true
 xpos 1424
 ypos -4091
 addUserKnob {20 User l deadPixelFinder}
 addUserKnob {41 framesbehind l "Frames to look at" T TimeEcho1.framesbehind}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" t "May 15, 2019 - v1.1 Refined" +STARTLINE T "Dead Pixel Finder v1.1"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 61
 }
 Invert {
  name Invert3
  xpos 447
  ypos 432
 }
 TimeEcho {
  framesbehind 60
  name TimeEcho1
  selected true
  xpos 447
  ypos 495
 }
 Invert {
  name Invert4
  xpos 447
  ypos 565
 }
 Dot {
  name Dot170
  note_font_size 40
  xpos 481
  ypos 667
 }
set Ncb726000 [stack 0]
 Colorspace {
  colorspace_out Cineon
  name Colorspace1
  xpos 656
  ypos 663
 }
 Blur {
  channels rgba
  size 0.67
  name Blur18
  label "\[value size] px"
  xpos 656
  ypos 733
 }
push $Ncb726000
 Colorspace {
  colorspace_out Cineon
  name Colorspace2
  xpos 447
  ypos 727
 }
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge83
  xpos 447
  ypos 846
 }
 Grade {
  whitepoint 0.0002
  gamma 0.455
  name Grade20
  xpos 447
  ypos 872
 }
 FrameHold {
  first_frame {{last_frame}}
  name FrameHold1
  xpos 447
  ypos 932
 }
set N74c41f70 [stack 0]
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
push $N74c41f70
 Viewer {
  frame_range 1001-1060
  viewerProcess "Rodeo look (Rec709)"
  name Viewer1
  xpos 257
  ypos 1000
 }
end_group
push $cut_paste_input
Group {
 name deepExpander
 tile_color 0x421010ff
 selected true
 xpos 1315
 ypos -4115
 addUserKnob {20 User l deepExpander}
 addUserKnob {41 expand T DeepExpression1.expand}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" t "May 14, 2019 - Created" +STARTLINE T "Deep Expander v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 61
 }
 DeepExpression {
  chans1 deep
  deep.front "deep.front - \[value expand]"
  deep.back "deep.back + \[value expand]"
  name DeepExpression1
  xpos 447
  ypos 342
  addUserKnob {20 User}
  addUserKnob {7 expand R 0 100}
  expand 70.8
 }
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
end_group
push $cut_paste_input
Group {
 name edgeSmear
 tile_color 0x421010ff
 selected true
 xpos 1326
 ypos -4055
 addUserKnob {20 User l edgeSmear}
 addUserKnob {7 gamma R 0 2}
 gamma 0.99
 addUserKnob {41 size T Blur1.size}
 addUserKnob {41 size_1 l erode T Dilate1.size}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "EdgeSmear v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 61
 }
set N22b8aec0 [stack 0]
 Dot {
  name Dot2
  note_font_size 40
  xpos 717
  ypos 65
 }
push $N22b8aec0
 Dot {
  name Dot1
  note_font_size 40
  xpos 481
  ypos 261
 }
 AddChannels {
  inputs 0
  channels alpha
  name AddChannels1
  xpos 683
  ypos 95
 }
set N8b8ffa50 [stack 0]
 Gamma {
  channels alpha
  value {{parent.gamma}}
  name Gamma1
  xpos 683
  ypos 168
 }
 Dilate {
  channels rgba
  name Dilate1
  label "\[value size] px"
  xpos 683
  ypos 206
 }
push $N8b8ffa50
 Multiply {
  value 0
  name Multiply1
  xpos 583
  ypos 146
 }
 Expression {
  expr0 "(x+.5) / input.width"
  expr1 "(y+.5) / input.height"
  name Expression1
  xpos 583
  ypos 212
 }
set N1a1cfb60 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 683
  ypos 254
 }
 Premult {
  name Premult1
  xpos 683
  ypos 317
 }
 Blur {
  channels rgba
  size 8.4
  name Blur1
  label "\[value size] px"
  xpos 683
  ypos 354
 }
 Unpremult {
  name Unpremult1
  xpos 683
  ypos 440
 }
 Expression {
  expr3 "(r+g+b) != 0"
  name Expression2
  xpos 683
  ypos 466
 }
push $N1a1cfb60
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  xpos 583
  ypos 522
 }
 Dot {
  name Dot3
  note_font_size 40
  xpos 617
  ypos 598
 }
push 0
 STMap {
  inputs 2
  channels rgb
  uv rgb
  name STMap1
  xpos 447
  ypos 594
 }
set N1dda5500 [stack 0]
 Output {
  name Output1
  xpos 447
  ypos 668
 }
push $N1dda5500
 Viewer {
  frame_range 1001-1083
  viewerProcess "Rodeo look (Rec709)"
  input_process false
  name Viewer1
  xpos 736
  ypos 860
 }
end_group
push $cut_paste_input
Group {
 name enthicken4
 knobChanged "import nuke\nimport nukescripts\n\nMIN_ITERATIONS = 1\nMAX_ITERATIONS = 10\nn=nuke.thisNode() \nk=nuke.thisKnob()\n\ninput = nuke.toNode('Input')\nmergeNodes = \[i for i in nuke.allNodes() if i.Class() == 'Merge2']\niterations = int(n\['iterations'].getValue())\n\ndef update():\n    iterations = int(n\['iterations'].getValue())\n    for m in mergeNodes:\n        nuke.delete(m)\n    prev = None\n    for x in range(iterations):\n        merge = nuke.createNode('Merge2', inpanel=False)\n        setPos(merge, 0, (x+1)*40)\n        if prev is None:\n            merge.setInput(0, input)\n            merge.setInput(1, input)\n        else:\n            merge.setInput(0, prev)\n            merge.setInput(1, prev)\n        prev = merge\n        \n    nuke.toNode('Output1').setInput(0, prev)\n\ndef setPos(n, x=0, y=0):\n    ox, oy = input.xpos(), input.ypos()\n    n.setXpos(x + ox)\n    n.setYpos(y + oy)  \n\nif k.name() == 'iterations':\n    if iterations < MIN_ITERATIONS:\n
     n\['iterations'].setValue(MIN_ITERATIONS)\n    elif iterations > MAX_ITERATIONS:\n        n\['iterations'].setValue(MAX_ITERATIONS)\n    elif MIN_ITERATIONS <= iterations <= MAX_ITERATIONS:\n        update()\n        \nelif k.name() == 'increase':\n    zz = iterations + 1\n    if MIN_ITERATIONS <= zz <= MAX_ITERATIONS:\n        n.knob('iterations').setValue(zz)\n        update()\n\nelif k.name() == 'decrease':\n    zz = iterations - 1\n    if MIN_ITERATIONS <= zz <= MAX_ITERATIONS:\n        n.knob('iterations').setValue(zz)\n        update()\n"
 tile_color 0x421010ff
 selected true
 xpos 1396
 ypos -4003
 addUserKnob {20 User l enthicken}
 addUserKnob {3 iterations}
 iterations 3
 addUserKnob {22 increase +STARTLINE}
 addUserKnob {22 decrease -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "Enthicken v1.1"}
 addUserKnob {22 btn l DerekVFX.ca t "July 22, 2019 - Created 1.0\nJuly 22, 2019 - Added buttons 1.1" T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wai
 t)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 262
  ypos -690
 }
set N748abc60 [stack 0]
push $N748abc60
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  xpos 262
  ypos -650
 }
set N748b0550 [stack 0]
push $N748b0550
 Merge2 {
  inputs 2
  bbox B
  name Merge2
  xpos 262
  ypos -610
 }
set N748bfd40 [stack 0]
push $N748bfd40
 Merge2 {
  inputs 2
  bbox B
  name Merge3
  selected true
  xpos 262
  ypos -570
 }
 Output {
  name Output1
  xpos 264
  ypos 366
 }
end_group
push $cut_paste_input
Group {
 name FillBBox
 tile_color 0x421010ff
 selected true
 xpos 1476
 ypos -4033
 addUserKnob {20 User l FillBBox}
 addUserKnob {41 numpixels l "Add Pixels" T AdjBBox1.numpixels}
 addUserKnob {41 bbox l "set bbox to " T Merge1.bbox}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "Fill BBox v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 61
 }
set N8b633ba0 [stack 0]
 Crop {
  box {0 0 {input.width} {input.height}}
  reformat true
  crop false
  name Crop1
  xpos 600
  ypos 92
 }
 AdjBBox {
  numpixels 105
  name AdjBBox1
  label "\[value numpixels]"
  xpos 592
  ypos 127
 }
push $N8b633ba0
 Merge2 {
  inputs 2
  output none
  name Merge1
  xpos 558
  ypos 192
 }
push $N8b633ba0
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 447
  ypos 277
 }
set N8ce16240 [stack 0]
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
push $N8ce16240
 Viewer {
  frame_range 1001-1083
  viewerProcess "Rodeo look (Rec709)"
  name Viewer1
  xpos 246
  ypos 146
 }
end_group
push $cut_paste_input
Group {
 name grainCheck
 tile_color 0x421010ff
 selected true
 xpos 1480
 ypos -3948
 addUserKnob {20 User l template}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "Template v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 61
 }
 Dot {
  name Dot17
  note_font_size 40
  xpos 633
  ypos 251
 }
set N1b4ee890 [stack 0]
 Colorspace {
  colorspace_out Cineon
  name Colorspace1
  label "value colorspace_in] -> \[value colorspace_out]"
  xpos 808
  ypos 253
 }
 Blur {
  channels rgba
  size 0.67
  name Blur1
  label "\[value size] px"
  xpos 808
  ypos 315
 }
push $N1b4ee890
 Colorspace {
  colorspace_out Cineon
  name Colorspace3
  label "value colorspace_in] -> \[value colorspace_out]"
  xpos 682
  ypos 299
 }
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge4
  xpos 723
  ypos 433
 }
 Grade {
  whitepoint 0.0004
  name Grade1
  xpos 723
  ypos 459
 }
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
end_group
push $cut_paste_input
push 0
Group {
 inputs 2
 name mergeLog
 tile_color 0x421010ff
 selected true
 xpos 1402
 ypos -3893
 addUserKnob {20 User l mergeLog}
 addUserKnob {41 output T Merge1.output}
 addUserKnob {41 also_merge l "also merge" T Merge1.also_merge}
 addUserKnob {41 mix T Merge1.mix}
 addUserKnob {6 regularover l "regular over" -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "Merge Log v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name A
  xpos 142
  ypos 69
  number 1
 }
 Unpremult {
  name Unpremult1
  xpos 142
  ypos 116
 }
set N6ab87260 [stack 0]
 Input {
  inputs 0
  name B
  xpos 447
  ypos 61
 }
set N6ab68f90 [stack 0]
 Merge2 {
  inputs 2
  operation matte
  bbox B
  name Merge1
  xpos 619
  ypos 325
 }
 set C6ab8aa10 [stack 0]
push $N6ab87260
 Colorspace {
  colorspace_out AlexaV3LogC
  name Colorspace1
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 142
  ypos 212
 }
 set C6ab94dd0 [stack 0]
push $N6ab68f90
clone $C6ab94dd0 {
  xpos 447
  ypos 155
  selected false
 }
clone $C6ab8aa10 {
  inputs 2
  xpos 447
  ypos 312
  selected false
 }
 Colorspace {
  colorspace_in AlexaV3LogC
  name Colorspace2
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 447
  ypos 377
 }
set N2c9ef360 [stack 0]
 Switch {
  inputs 2
  which {{regularover}}
  name Switch1
  label "\[value which]"
  selected true
  xpos 447
  ypos 473
 }
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
push $N2c9ef360
 Viewer {
  frame_range 1001-1060
  viewerProcess "Rodeo look (Rec709)"
  input_process false
  name Viewer1
  xpos -109
  ypos 312
 }
end_group
push $cut_paste_input
Group {
 name radialDistort
 tile_color 0x421010ff
 selected true
 xpos 1295
 ypos -3928
 addUserKnob {20 User l radialDistort}
 addUserKnob {7 rotation R -360 360}
 addUserKnob {7 gamma R 0 4}
 gamma 1.68
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "RadialDistort v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 60
 }
set N8ab9ae50 [stack 0]
 Multiply {
  value 0
  name Multiply1
  label "\[value value]"
  xpos 107
  ypos 286
 }
 Expression {
  temp_name0 radial
  temp_expr0 "((atan(x - center.x, y - center.y) +radians(rotation) ) + pi()) / pi()/2"
  temp_name1 offset
  temp_expr1 "(radians(rotation) *-1 ) /pi()/2"
  expr0 radial
  expr1 "sqrt(((x-center.x)**2) + ((y-center.y)**2))/diag"
  expr2 offset
  expr3 0
  name Expression3
  label "\[knob expr3]"
  xpos 107
  ypos 336
  addUserKnob {20 User}
  addUserKnob {7 diag}
  diag {{(sqrt(width**2+height**2)/2)}}
  addUserKnob {12 center}
  center {978 404}
 }
set N8ab848f0 [stack 0]
 Gamma {
  channels {-rgba.red rgba.green -rgba.blue none}
  value {{gamma}}
  name Gamma1
  xpos 107
  ypos 444
 }
push $N8ab9ae50
 STMap {
  inputs 2
  channels rgba
  uv rgb
  name STMap3
  xpos 447
  ypos 574
 }
 Output {
  name Output1
  xpos 456
  ypos 1028
 }
push $N8ab848f0
 Viewer {
  frame 1084
  frame_range 1017-1149
  colour_sample_bbox {-0.05533980578 -0.2660194039 -0.0543689318 -0.2650485337}
  viewerProcess "Rodeo look (Rec709)"
  name Viewer1
  xpos 810
  ypos 595
 }
end_group
push $cut_paste_input
add_layer {P_lig P_lig.X P_lig.Y P_lig.Z}
Group {
 name sample2Node
 tile_color 0x421010ff
 selected true
 xpos 1287
 ypos -3853
 addUserKnob {20 User l sample2Node}
 addUserKnob {41 in l channel T Shuffle1.in}
 addUserKnob {41 pick l sample T NoOp1.pick}
 addUserKnob {22 Card T "import nuke\n\nvalue = nuke.thisNode().knob('pick').getValue()\n\nnuke.root().begin()\n\nnode = nuke.createNode('Card2')\n\nnode\['translate'].setValue(value)" +STARTLINE}
 addUserKnob {22 Card3D -STARTLINE T "import nuke\n\nvalue = nuke.thisNode().knob('pick').getValue()\n\nnuke.root().begin()\n\nnode = nuke.createNode('Card3D')\n\nnode\['translate'].setValue(value)"}
 addUserKnob {22 Axis -STARTLINE T "import nuke\n\nvalue = nuke.thisNode().knob('pick').getValue()\n\nnuke.root().begin()\n\nnode = nuke.createNode('Axis2')\n\nnode\['translate'].setValue(value)"}
 addUserKnob {22 Light -STARTLINE T "import nuke\n\nvalue = nuke.thisNode().knob('pick').getValue()\n\nnuke.root().begin()\n\nnode = nuke.createNode('Light2')\n\nnode\['translate'].setValue(value)"}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "Sample2Node v1.0"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
}
 Input {
  inputs 0
  name Input
  xpos 447
  ypos 61
 }
set N19bf0080 [stack 0]
 Output {
  name Output1
  xpos 447
  ypos 1055
 }
push $N19bf0080
 Shuffle {
  in P_lig
  name Shuffle1
  label "\[value in]"
  xpos 272
  ypos 219
 }
 NoOp {
  name NoOp1
  xpos 272
  ypos 282
  hide_input true
  addUserKnob {20 User}
  addUserKnob {18 pick}
  pick {43.7382431 12.38535595 -108.212326}
  addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
end_group
push $cut_paste_input
Group {
 name scanlineRenderSimple3
 tile_color 0x421010ff
 label "\[value gui_samples] : \[value render_samples] - \[value overscan_dynamic]"
 selected true
 xpos 1428
 ypos -3801
 addUserKnob {20 User l ScanlineRender}
 addUserKnob {41 format T Constant1.format}
 addUserKnob {41 overscan_dynamic l overscan T ScanlineRender1.overscan_dynamic}
 addUserKnob {41 filter l "sample filter" T ScanlineRender1.filter}
 addUserKnob {41 antialiasing -STARTLINE T ScanlineRender1.antialiasing}
 addUserKnob {41 zblend_mode l "Z-blend mode" -STARTLINE T ScanlineRender1.zblend_mode}
 addUserKnob {41 shutter T ScanlineRender1.shutter}
 addUserKnob {41 gui_samples l "gui samples" T ScanlineRender1.gui_samples}
 addUserKnob {7 gui_scale l "gui scale" -STARTLINE R 0.1 1}
 gui_scale 0.1
 addUserKnob {41 render_samples l "render samples" T ScanlineRender1.render_samples}
 addUserKnob {7 render_scale l "render scale" -STARTLINE R 1 10}
 render_scale 1
 addUserKnob {41 filter_1 l "uprez filter" T Reformat2.filter}
 addUserKnob {41 expand l "deep soft expand" T DeepExpression1.expand}
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" t "July 12, 2019- added overscan\nJuly 19, 2019 - added soft deep and dynamic scale 1.2\nJuly 24, 2019 - added deep proxy scale 1.3" +STARTLINE T "ScanlineRender Simple v1.3"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
 addUserKnob {20 aov l AOV}
 addUserKnob {41 output_shader_vectors l "output vectors" T ScanlineRender1.output_shader_vectors}
 addUserKnob {41 P_channel l "surface point" T ScanlineRender1.P_channel}
 addUserKnob {41 N_channel l "surface normal" T ScanlineRender1.N_channel}
}
 Input {
  inputs 0
  name deepHoldout
  xpos 84
  ypos 245
  number 2
 }
 DeepReformat {
  format {{{parent.Constant1.format}}}
  resize none
  pbb true
  name DeepReformat1
  xpos 84
  ypos 271
 }
set N6c7cf350 [stack 0]
 DeepReformat {
  type scale
  scale {{parent.guiScale.scale}}
  pbb true
  name deepReformatGUI
  xpos -41
  ypos 346
 }
push $N6c7cf350
 DeepReformat {
  type scale
  scale {{parent.renderScale.scale}}
  pbb true
  name deepReformatRender
  xpos 84
  ypos 346
 }
 Switch {
  inputs 2
  which {{"\$gui"}}
  name Switch1
  label "\[value which]"
  xpos 84
  ypos 412
 }
 set Cb15daf30 [stack 0]
 Dot {
  name Dot3
  note_font_size 40
  xpos 118
  ypos 611
 }
 Input {
  inputs 0
  name cam
  xpos 284
  ypos 245
  number 1
 }
 Dot {
  name Dot2
  note_font_size 40
  xpos 318
  ypos 502
 }
 Input {
  inputs 0
  name scene
  xpos 484
  ypos 245
 }
 Constant {
  inputs 0
  format "2060 858 0 0 2060 858 1 sg_bld"
  name Constant1
  xpos 684
  ypos 245
 }
set Nb15f4810 [stack 0]
 Reformat {
  type scale
  scale {{gui_scale}}
  name guiScale
  xpos 559
  ypos 346
 }
push $Nb15f4810
 Reformat {
  type scale
  scale {{render_scale}}
  name renderScale
  xpos 684
  ypos 346
 }
clone $Cb15daf30 {
  inputs 2
  xpos 684
  ypos 412
  selected false
 }
 Dot {
  name Dot1
  note_font_size 40
  xpos 718
  ypos 502
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  antialiasing high
  overscan {{"\$gui ? overscan_dynamic*guiScale.scale : overscan_dynamic*renderScale.scale"}}
  samples {{"\$gui ? gui_samples : render_samples"}}
  shutteroffset centred
  motion_vectors_type distance
  name ScanlineRender1
  label "\[value samples]"
  xpos 484
  ypos 492
  addUserKnob {20 User}
  addUserKnob {3 gui_samples}
  gui_samples 1
  addUserKnob {3 render_samples}
  render_samples 5
  addUserKnob {7 overscan_dynamic R 0 100}
  overscan_dynamic 32.8
 }
 DeepExpression {
  chans1 deep
  deep.front "deep.front - \[value expand]"
  deep.back "deep.back + \[value expand]"
  name DeepExpression1
  xpos 484
  ypos 551
  disable {{"expand == 0"}}
  addUserKnob {20 User}
  addUserKnob {7 expand R 0 100}
  expand 30.4
 }
 DeepHoldout2 {
  inputs 2
  name DeepHoldout1
  xpos 484
  ypos 607
 }
 Reformat {
  format {{{parent.Constant1.format}}}
  pbb true
  name Reformat2
  xpos 484
  ypos 676
 }
 Output {
  name Output1
  xpos 484
  ypos 756
 }
end_group
push $cut_paste_input
Group {
 name schmutz
 tile_color 0x421010ff
 selected true
 xpos 1298
 ypos -3745
 addUserKnob {20 User l waterSchmutz}
 addUserKnob {41 cube l boundaries T Cube1.cube}
 addUserKnob {26 ""}
 addUserKnob {41 translate T Cube1.translate}
 addUserKnob {41 rotate T Cube1.rotate}
 addUserKnob {26 ""}
 addUserKnob {6 spriteView +STARTLINE}
 addUserKnob {6 customSpriteSwitch l "custom sprite" -STARTLINE}
 addUserKnob {41 start_frame l "start at" T ParticleEmitter3.start_frame}
 addUserKnob {7 particleDensity l "particle density"}
 particleDensity 1
 addUserKnob {41 size T ParticleEmitter3.size}
 addUserKnob {41 size_variation l "size range" T ParticleEmitter3.size_variation}
 addUserKnob {22 update l "Refresh Particles" T "import random\nnuke.thisNode().knob('seed').setValue( random.randint(1,16384) )" +STARTLINE}
 addUserKnob {3 seed -STARTLINE}
 seed 662
 addUserKnob {41 to l "wind direction" T ParticleWind1.to}
 addUserKnob {6 wrapPart l "wrap particles" +STARTLINE}
 wrapPart true
 addUserKnob {7 edgefade l "edge fade"}
 addUserKnob {26 ""}
 addUserKnob {7 tScale l "turbulence scale" R 0 10}
 tScale 8
 addUserKnob {7 tStrength l "turbulence stregth"}
 tStrength 1
 addUserKnob {26 ""}
 addUserKnob {26 lbl l "" +STARTLINE T "schmutz v1.6"}
 addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
 addUserKnob {20 render l renderSettings}
 addUserKnob {41 format l "output format" T Reformat3.format}
 addUserKnob {41 antialiasing T ScanlineRender1.antialiasing}
 addUserKnob {41 overscan T ScanlineRender1.overscan}
 addUserKnob {6 proxyRender l "proxy mode" +STARTLINE}
 proxyRender true
 addUserKnob {41 scale l "proxy scale" -STARTLINE T Reformat2.scale}
 addUserKnob {6 guiDisable l "GUI Disable" +STARTLINE}
 guiDisable true
 addUserKnob {26 ""}
 addUserKnob {41 samples T ScanlineRender1.samples}
 addUserKnob {41 shutter T ScanlineRender1.shutter}
 addUserKnob {41 stochastic_samples l "stochastic samples" T ScanlineRender1.stochastic_samples}
 addUserKnob {41 filter l "render filter" T ScanlineRender1.filter}
 addUserKnob {41 filter_1 l "reformat filter" T Reformat4.filter}
 addUserKnob {20 particleSettings}
 addUserKnob {41 format_1 l format T Constant1.format}
 addUserKnob {41 first l "frame range" T Constant1.first}
 addUserKnob {41 last l "" -STARTLINE T Constant1.last}
 addUserKnob {41 start_frame_animation l "start at" T ParticleEmitter3.start_frame_animation}
 addUserKnob {41 start_wrap l "limit to range" -STARTLINE T ParticleEmitter3.start_wrap}
 addUserKnob {41 frame_advance l advance T ParticleEmitter3.frame_advance}
 addUserKnob {41 max_clip_length l "max clip length" -STARTLINE T ParticleEmitter3.max_clip_length}
 addUserKnob {26 div l "" +STARTLINE T " "}
 addUserKnob {20 spriteSettings n 1}
 addUserKnob {41 type T Noise1.type}
 addUserKnob {41 size_1 l x/ysize T Noise1.size}
 addUserKnob {41 zoffset l z T Noise1.zoffset}
 addUserKnob {41 gain T Noise1.gain}
 addUserKnob {20 endGroup n -1}
}
 Cube {
  inputs 0
  display wireframe
  render_mode wireframe
  rows 1
  columns 1
  cube {-500 0 -500 500 500 500}
  pivot {{"abs(cube.x-cube.r)/2+((cube.x 0 & frame-start_frame < 2 ? ((Cube1.volume/1000000)*particleDensity) : 0"}}
  lifetime inf
  velocity 0
  size 1
  size_variation 4
  start_wrap true
  seed {{parent.seed}}
  name ParticleEmitter3
  knobChanged 5
  xpos -714
  ypos 461
  disable {{"guiDisable ? \$gui : 0"}}
 }
 ParticleExpression {
  temp_name1 c
  temp_expr1 "v(\[value Cube1.cube.x],\[value Cube1.cube.y],\[value Cube1.cube.n])"
  temp_name2 b
  temp_expr2 "v(\[value Cube1.cube.r],\[value Cube1.cube.t],\[value Cube1.cube.f])"
  posexpr v(random*abs(x(c)-x(b))+x(c),random*abs(y(c)-y(b))+y(c),random*abs(z(c)-z(b))+z(c))
  posexpr_onlynew true
  name spread
  xpos -714
  ypos 487
  disable {{"guiDisable ? \$gui : 0"}}
 }
 ParticleTurbulence {
  strength {{schmutz.tStrength} {strength.x} {strength.x}}
  scale {{schmutz.tScale} {scale.x} {scale.x}}
  name ParticleTurbulence1
  xpos -714
  ypos 525
  disable {{"guiDisable ? \$gui : 0"}}
 }
 ParticleWind {
  to {0 0 0}
  name ParticleWind1
  xpos -714
  ypos 563
  disable {{"guiDisable ? \$gui : 0"}}
 }
 ParticleExpression {
  temp_name1 f
  temp_expr1 "v(\[value Cube1.cube.x],\[value Cube1.cube.y],\[value Cube1.cube.n])"
  temp_name2 b
  temp_expr2 "v(\[value Cube1.cube.r],\[value Cube1.cube.t],\[value Cube1.cube.f])"
  temp_name3 poz
  temp_expr3 pos
  posexpr v(x(poz)>x(b)?x(f):(x(poz)y(b)?y(f):(y(poz)z(b)?z(f):(z(poz)

